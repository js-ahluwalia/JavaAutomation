{
	"info": {
		"_postman_id": "54874a54-55fb-4aa5-92e9-e985d4be5d3a",
		"name": "createOnboardedUserWithReader",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36025632"
	},
	"item": [
		{
			"name": "Add or Replace Reader",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request is \",pm.request);",
							"console.log(\"Response is \",pm.response);",
							"pm.environment.set(\"status_of_response\", pm.response.code);",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}

			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "uid",
						"value": "{{uid}}"
					},
					{
						"key": "client",
						"value": "{{client}}"
					},
					{
						"key": "access-token",
						"value": "{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user\": {\r\n        \"reader_code\": \"{{reader_code}}\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/users/{{user_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Basic Information Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request is \",pm.request);",
							"console.log(\"Response is \",pm.response);",
							"pm.environment.set(\"status_of_response\", pm.response.code);",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var status_of_response = pm.environment.get(\"status_of_response\");",
							"if (status_of_response < '200' || status_of_response>= '300') {",
							"    pm.execution.skipRequest();",
							"     throw new Error(\"Skipping request because status_of_response is not 200\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "uid",
						"value": "{{uid}}"
					},
					{
						"key": "client",
						"value": "{{client}}"
					},
					{
						"key": "access-token",
						"value": "{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"age\": \"27\",\r\n    \"height\": \"160\",\r\n    \"weight_with_units\": \"123\",\r\n    \"trying_to_conceive_duration\": [\"Over 1 year\"],\r\n        \"diagnosed_with_conditions\": [\"No\"],\r\n        \"undergone_treatments\": [\"No\"],\r\n        \"other_products_used\": [\"No\"],\r\n        \"notification_settings\": {\"have_sex_notification_enabled\": true}\r\n//        \"troubleshooting_active\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/profile",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Onboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"console.log(\"Request is \",pm.request);",
							"console.log(\"Response is \",pm.response);",
							"pm.environment.set(\"status_of_response\", pm.response.code);",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var status_of_response = pm.environment.get(\"status_of_response\");",
							"if (status_of_response < '200' || status_of_response>= '300') {",
							"    pm.execution.skipRequest();",
							"     throw new Error(\"Skipping request because status_of_response is not 200\");",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}

			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "uid",
						"value": "{{uid}}"
					},
					{
						"key": "client",
						"value": "{{client}}"
					},
					{
						"key": "access-token",
						"value": "{{access_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user\": {\r\n        \"period_dates\": {{period_dates}}\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/v1/users/{{user_id}}/onboard",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"{{user_id}}",
						"onboard"
					]
				}
			},
			"response": []
		}
	]
}